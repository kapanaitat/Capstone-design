#human pose stimation node

import rospy
import cv2
import tensorflow as tf
from sensor_msgs.msg import Image
from cv_bridge import CvBridge
from tf_pose.estimator import TfPoseEstimator
from tf_pose.networks import get_graph_path

class PoseEstimatorNode:
    def __init__(self):
        self.bridge = CvBridge()
        self.pose_pub = rospy.Publisher('/pose', Image, queue_size=1)
        self.image_sub = rospy.Subscriber('/camera/image_raw', Image, self.pose_estimation_callback, queue_size=1)

    def pose_estimation_callback(self, msg):
        try:
            cv_image = self.bridge.imgmsg_to_cv2(msg, 'bgr8')
            humans = self.pose_estimation(cv_image)
            pose_image = self.draw_pose(cv_image, humans)
            pose_msg = self.bridge.cv2_to_imgmsg(pose_image, 'bgr8')
            self.pose_pub.publish(pose_msg)
        except Exception as e:
            rospy.logerr('Pose estimation failed: %s', str(e))

    def pose_estimation(self, image):
        model_path = get_graph_path('mobilenet_thin')
        e = TfPoseEstimator(model_path, target_size=(432, 368))
        humans = e.inference(image, resize_to_default=True, upsample_size=4)
        return humans

    def draw_pose(self, image, humans):
        e = TfPoseEstimator(get_graph_path('mobilenet_thin'), target_size=(432, 368))
        pose_image = TfPoseEstimator.draw_humans(image, humans, imgcopy=False)
        return pose_image

if __name__ == '__main__':
    rospy.init_node('pose_estimator_node')
    node = PoseEstimatorNode()
    rospy.spin()
